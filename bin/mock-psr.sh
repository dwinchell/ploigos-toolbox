#!/bin/bash
STEP=$1

unit-test() {
  echo "####################################################################################################"
  echo "############################     RUNNING UNIT TESTS     ############################################"
  echo "####################################################################################################"
  echo
  if [ -f "pom.xml" ]; then
    echo "####################################################################################################"
    echo "############################     USING MAVEN     ###################################################"
    echo "####################################################################################################"
    echo
    echo "Detected pom.xml. Using Maven. You can configure PSR to change this."
    mvn test
  elif [ -f "package.json" ]; then
    echo "####################################################################################################"
    echo "############################     USING NPM     #####################################################"
    echo "####################################################################################################"
    echo
    echo "Detected package.json. Using npm. You can configure PSR to change this."
    npm test
  else
    echo "Error: no step implementer specified in configuration and could not auto-detect which one to use."
  fi
  echo "####################################################################################################"
  if [ $_ ]; then
  echo "############################     UNIT TESTS PASS     ###############################################"
  else
  echo "############################     UNIT TESTS FAIL     ###############################################"
  fi
  echo "####################################################################################################"
  echo
}

vulnerability() {
  echo
  echo "####################################################################################################"
  echo "############################     RUNNING VULNERABILITY SCAN     ####################################"
  echo "####################################################################################################"
  echo

  snyk test

  echo "####################################################################################################"
  if [ $_ ]; then
  echo "############################     VULNERABILITY SCAN -  PASS     ####################################"
  else
  echo "############################     VULNERABILITY SCAN -  FAIL     ####################################"
  fi
  echo "####################################################################################################"
}

quality() {
  echo
  echo "####################################################################################################"
  echo "############################     RUNNING QUALITY SCAN     ##########################################"
  echo "####################################################################################################"
  echo

  sonar-scanner

  echo "####################################################################################################"
  if [ $_ ]; then
  echo "############################     QUALITY SCAN -  PASS     ##########################################"
  else
  echo "############################     QUALITY SCAN -  FAIL     ##########################################"
  fi
  echo "####################################################################################################"
}

monitor() {
 OLD_HASHES=""
 while [[ true ]]
 do
   NEW_HASHES=$(find . -type f -exec md5sum {} \;)
   if [ "${OLD_HASHES}" != "${NEW_HASHES}" ]; then
     all
   fi
   OLD_HASHES=${NEW_HASHES}
   sleep 1
 done
}

all() {
  unit-test
  vulnerability
  quality
}

run() {
  if [ "${STEP}" == "unit-test" ]; then
    unit-test
  elif [ "${STEP}" == "vulnerability" ]; then
    vulnerability
  elif [ "${STEP}" == "quality" ]; then
    quality
  elif [ "${STEP}" == "all" ]; then
    all
  elif [ "${STEP}" == "monitor" ]; then
    monitor all
  fi
}

run


